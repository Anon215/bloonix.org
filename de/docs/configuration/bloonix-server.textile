h1. Konfiguration des Bloonix-Servers

p. Die Konfiguration des Servers befindet sich in:

pre. /etc/bloonix/server/main.conf

h2. Globale Parameter

pre. user bloonix
group bloonix
timezone Europe/Berlin
hostname yourhostname
allow_from ^127\.0\.0\.1\z
elasticsearch_roll_forward /var/log/bloonix/elasticsearch-roll-forward.json

|Parameter|Standard|Beschreibung|

|user|bloonix|Mit welchem Benutzer soll der Daemon laufen.|
|group|bloonix|Mit welcher Gruppe soll der Daemon laufen.|
|timezone|Europe/Berlin|Die Zeitzone des Servers.|
|hostname|wird ermittelt|Der Hostname, auf dem der Server läuft. Der Hostname wird automatisch ermittelt, wenn er nicht angegeben ist.|
|allow_from|^127\.0\.0\.1\z|Dieser Parameter ist vergleichbar mit einer Whitelist. Es können alle vertrauenswürdigen IP-Adressen eingetragen werden, auf denen ein Bloonix-Agent läuft. Den Parameter gibt es auch in der Weboberfläche von Bloonix bei der Einrichtung eines Hosts. Dort können ebenfalls IP-Adressen eingetragen werden, denen es erlaubt ist, Daten für den Host abzufragen bzw. Daten abzuliefern.|
|elasticsearch_roll_forward|/var/log/bloonix/elasticsearch-roll-forward.json|Siehe unten.|

h3. Roll-Forward-Log

p. Jedesmal, wenn Elasticsearch nicht erreichbar ist oder ein Fehler auftritt, werden Inserts und Updates in eine Datei geschrieben. Wenn zum Beispiel Elasticsearch nach einem Update einen Cluster-Restart erfordert, landen alle Aktionen in der Datei. Diese Einträge können später importiert werden. Das Kommando hierzu lautet:

pre. bloonix-roll-forward-log

p. Das Skript läd automatisch die Serverkonfiguration und importiert vorhandene Einträge im Logfile nach Elasticsearch. Das Skript geht dabei wie folgt vor:


* Logfile umbenennen nach __elasticsearch-roll-forward.json.import__|
* Eine Datei namens __elasticsearch-roll-forward.json.import.count__ anlegen, um den Verarbeitungsstatus zu speichern|
* Das Logfile __elasticsearch-roll-forward.json.import__ wird importiert|
* Bei Verbindungsfehlern werden die Datensätze in __elasticsearch-roll-forward.json__ geschrieben|
* Nach dem Durchlauf werden die temporären Dateien __elasticsearch-roll-forward.json.import__ und __elasticsearch-roll-forward.json.import.count__ entfernt|

p. Ist das Skript einmal gestartet, sollte es auf keinen Fall gestoppt werden. Das Skript merkt sich zwar, bis zu welcher Zeile die Daten verarbeitet wurden, trotzallem kann zu einem Verlust oder zu doppelten Einträgen kommen, wenn der Verarbeitungsprozess seinen Status nicht erfolgreich auf die Platte schreiben konnte.

% $stash->{item_name} = "der Bloonix-Server";
% $stash->{item_port} = 9001;
<% include /de/docs/configuration/template-proc-manager.textile %>

h2. Sektion: smsgateway

pre. smsgateway {
    command /usr/bin/curl --silent https://sms.test?key=SECRET&from=BLOONIX&to=%TO%&message=%MESSAGE%
    response ^100$
}

|Parameter|Standard|Beschreibung|
|command|||
|response|||

h2. Sektion: email

p. Diese Sektion wird für das Versenden von E-Mails an Kontakte konfiguriert.

pre. email {
    from subdomain@yourdomain.test
    bcc admin@yourdomain.test
    subject *** STATUS %s FOR %h (%a) ***
}

|Parameter|Standard|Beschreibung|
|sendmail|/usr/sbin/sendmail -t -oi -oem|Kommando zum Versenden von E-Mails.|
|from|bloonix@localhost|Die Adresse des Absenders.|
|bcc||Mit diesem Parameter ist es möglich, E-Mails an Kontakte als Blindkopie zu erhalten. Zusätzlich erhält der Empfänger eine Kopie jeder SMS, die versendet wurde.|
|subject|*** STATUS %s FOR %h (%a) ***|Hier wird der Betreff konfiguriert. Die Strings __%s__ (Status), __%h__ (Hostname) und __%a__ (IP-Adresse) werden ersetzt.|

h2. Sektion: redirect_remote_agent_timeouts

pre. redirect_remote_agent_timeouts {
    sms_to 012345
    mail_to foo@example.test
}

|Parameter|Standard|Beschreibung|
|sms_to|||
|mail_to|||

% $stash->{item_logfile} = "bloonix-server-database.log";
% $stash->{item_filename} = "bloonix-server.log";
<% include /de/docs/configuration/template-database.textile %>
<% include /de/docs/configuration/template-elasticsearch.textile %>
<% include /de/docs/configuration/template-logger.textile %>

