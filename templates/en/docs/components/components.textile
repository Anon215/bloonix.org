h1. Bloonix components

h2. Overview

p. Here you see a coarse overview of all components. Because the Bloonix server and the Bloonix-WebGUI run server-sided as an external FastCGI application, these are highly scaleable and can be installed on several servers. Everything what you still need then is a HTTPS offloader and loadbalancer to distribute the requests.

!{width: 100%; margin: 20px 0;}/public/img/bloonix-components-en.png!

p. The monitoring software of Bloonix exists of five main components:

* the Bloonix-Server
* the Bloonix-Service-Checker
* the Bloonix-Agent
* the Bloonix-Plugins
* and the Bloonix-WebGUI

h2. Bloonix-Server

p. The *Bloonix-Server* is the core of the monitoring framework and the interface for the Bloonix agents. The Bloonix server sends on request of an agent the configuration of the services and accepts the status and also statistical data of the Bloonix agents. The data will be validated and stored into the database. The Bloonix server also checks whether an event must be released to send a e-mail to an administrator to inform him about the fact that a service is overloaded or is not available any more.

h2. Bloonix-Service-Checker

p. The *Bloonix-Service-Checker* is a part of the Bloonix server and monitors the actuality of the status of hosts and services. If, for example, the CPU utilisation of a host was not checked since several minutes any more, this can be due to the fact that a Bloonix agent has fallen out. In this case the service-checker would step in as a pseudo agent and deliver a critical status for the service.

h2. Bloonix-Agent

p. The *Bloonix-Agent* is the part of the Frameworks which is responsible to monitor the services and to send the status of the services as well the statistics to the Bloonix server. The Bloonix agent is installed on the system and runs there as a demon which monitors permanently the system. The Bloonix agent can also be installed on a central server to monitor from there web service and network components, like Router, Switches and Loadbalancer.

h2. Bloonix-Plugins

p. The *Bloonix-Plugins* are smaller programms which check the status of one or several services and deliver at the same time statistical data to the service. A Plugin can be written in any computer language, it's only to be noted that the data exchange (program options and output of statistical data) occurs in the JSON format. The Plugins are installed together with the Bloonix agent.

h2. Bloonix-WebGUI

p. The *Bloonix-WebGUI* is the user interface and runs on the client side as a JavaScript application in the browser. On the server side the webgui runs as a REST-API behind a reverse proxy (Nginx). The data format of the REST-API is JSON.

p. For the WebGUI a modern HTML5 browser is required. We recommend the use of Chrome, Safari, Firefox or also Opera. The Internet Explorer in version 11 should also work, nevertheless, this browser is supported in no version.

<br/><br/>

h1. Storage and Webserver

h2. PostgreSQL / MySQL

p. The database is used to store the configuration and the data by hosts, services, users and groups. Other database systems are not supported.

p. "To the website of PostgreSQL":http://www.postgresql.org/
p. "To the website of MySQL":http://www.mysql.com/

h2. Elasticsearch

p. Elasticsearch is used to store metrics and events and all time based data. By the monitoring of several thousand hosts a high amount of data can arise. The choice fell on Elasticsearch, because Elasticsearch is highly scaleable and offers an easy cluster functionality.

p. "To the website of Elasticsearch":http://www.elasticsearch.org/

h2. Nginx

p. Nginx is used as a reverse proxy and as a HTTPS offloader, because the Bloonix-Server and the Bloonix-WebGUI runs as a external FastCGI application. Nginx is avery fast and the configuration is very easy.

p. "To the website of Nginx":http://nginx.com/
