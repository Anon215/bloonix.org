h1. Schneller Installationsguide auf CentOS 7 mit PostgreSQL

h3. Installieren Sie als erstes das EPEL Repository

bc. sudo yum install epel-release

h3. Installieren Sie das Bloonix Repository

bc. sudo rpm -ivh https://download.bloonix.de/repos/centos/7/noarch/bloonix-release-0.5-1.el7.centos.noarch.rpm

h3. Installieren Sie das Elasticsearch Repository

bc. sudo rpm --import https://packages.elasticsearch.org/GPG-KEY-elasticsearch
sudo vim /etc/yum.repos.d/elasticsearch.repo

p. Einfügen

bc. [elasticsearch-1.4]
name=Elasticsearch repository for 1.4.x packages
baseurl=http://packages.elasticsearch.org/elasticsearch/1.4/centos
gpgcheck=1
gpgkey=http://packages.elasticsearch.org/GPG-KEY-elasticsearch
enabled=1

h3. Paketinstallation

bc. sudo yum install \
    nginx \
    postgresql-server \
    elasticsearch \
    java-1.7.0-openjdk \
    bloonix-webgui \
    bloonix-server \
    bloonix-agent \
    bloonix-plugins-basic \
    bloonix-plugins-linux

h3. PostgreSQL initialisieren

bc. sudo postgresql-setup initdb

h3. PostgreSQL konfigurieren

p. Editieren Sie die Datei __/var/lib/pgsql/data/postgresql.conf__ und konfigurieren Sie PostgreSQL, um auf __localhost__ zu lauschen:

bc. sudo vim /var/lib/pgsql/data/postgresql.conf

p. Folgenden Paramter setzen:

bc. listen_addresses = 'localhost'

p. oder folgendes Kommando ausführen:

bc. sudo sed -i 's/^#listen_addresses /listen_addresses/' /var/lib/pgsql/data/postgresql.conf

p. Editieren Sie die Datei __/var/lib/pgsql/data/pg_hba.conf__ und Konfigurieren Sie PostgreSQL, um eine Verbindung mit Benutzername und Passwort zu erlauben:

bc. sudo vim /var/lib/pgsql/data/pg_hba.conf

p. Ersetzen Sie die folgenden Zeilen:

==
<pre><code><del>host    all             all             127.0.0.1/32            ident</del>
<del>host    all             all             ::1/128                ident</del>
host    all             all             127.0.0.1/32            md5
host    all             all             ::1/128                md5
</code></pre>
==

p. oder führen Sie folgendes Kommando aus:

bc. sudo sed -i 's/\(host  *all  *all  *127.0.0.1\/32  *\)ident/\1md5/' /var/lib/pgsql/data/pg_hba.conf
sudo sed -i 's/\(host  *all  *all  *::1\/128  *\)ident/\1md5/' /var/lib/pgsql/data/pg_hba.conf

h3. PostgreSQL neustarten

bc. sudo systemctl restart postgresql.service

h3. Nginx

p. Editieren Sie die Datei __/etc/nginx/nginx.conf__

bc. sudo vim /etc/nginx/nginx.conf

p. und fügen Sie folgende Zeile ein:

bc. include /etc/bloonix/webgui/nginx.conf; # diese Zeile einfügen
include /etc/nginx/conf.d/*.conf;       # oberhalb dieser Zeile

h3. Elasticsearch und Nginx starten

bc. sudo systemctl start elasticsearch.service
sudo systemctl start nginx.service

h3. Initialisieren Sie das Bloonix Template für Elasticsearch

bc. sudo /srv/bloonix/webgui/schema/init-elasticsearch localhost:9200

h3. Initialisieren Sie das Bloonix Schema für PostgreSQL

bc. sudo /srv/bloonix/webgui/schema/init-database --postgres

h3. Konfigurieren Sie den Agenten

p. Editieren Sie die Konfiguration des Bloonix Agenten und konfigurieren Sie die Sektion __server__:

bc. sudo vim /etc/bloonix/agent/main.conf

p. Setzen Sie folgende Paramter in der Sektion __server__:

==
<pre><code># Bloonix-Server hostname (demo.bloonix.org ist nur ein Beispiel)
host demo.bloonix.org

# Wenn Sie ein selbst signiertes Zertifikat einsetzen, dann muss die Validierung
# des Zertifikats deaktiviert werden
ssl_verify_mode none
</code></pre>
==

h3. Alle Bloonix Dienste starten

bc. sudo systemctl start bloonix-webgui.service
sudo systemctl start bloonix-server.service
sudo systemctl start bloonix-srvchk.service
sudo systemctl start bloonix-agent.service

h3. Alle Dienste automatisch nach einem Serverstart starten

bc. sudo systemctl enable bloonix-webgui.service
sudo systemctl enable bloonix-server.service
sudo systemctl enable bloonix-srvchk.service
sudo systemctl enable bloonix-agent.service
sudo systemctl enable postgresql
sudo systemctl enable nginx

h3. Ready to rumble

p. Fertig! :-) Jetzt können Sie sich in der WebGUI einloggen. Der initiale Benutzername und das Passwort lautet __admin/admin__
