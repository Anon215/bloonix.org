h1. Installation der WebGUI

p. Die Bloonix-WebGUI ist in zwei Pakete aufgeteilt. Es gibt zum Einen das Paket __bloonix-webgui-core__, welches Abhängigkeiten installiert und über die Konfigurationsdateien der WebGUI verfügt und zum Anderen das Paket __bloonix-webgui__, welches die Web-Applikation enthält, die unter __/srv/bloonix/webgui__ installiert wird.

p. _Wichtig: Bitte installieren Sie die WebGUI erst, wenn Sie Nginx installiert haben, da ansonsten wichtige Konfigurationsdateien nicht angelegt werden!_

p. Die WebGUI kann wie folgt installiert werden:

bc. # Debian / Ubuntu
apt-get install bloonix-webgui

bc. # Red Hat / CentOS / Fedora
yum install bloonix-webgui

bc. # SuSE / SLES
zypper install bloonix-webgui

h2. Nginx konfigurieren

p. Die Bloonix-WebGUI läuft als externe FastCGI Applikation und benötigt Nginx als Reverse Proxy. Sie können natürlich auch einen anderen Webserver verwenden. Zu beachten ist nur, dass der Webserver HTTP Requests zu einer externen FastCGI Applikation über IP:Port weiterleiten kann. Wir verwenden Nginx, da Nginx sehr populär, einfach zu konfigurieren und sehr, sehr schnell ist.

p. Die Konfiguration kann in der folgenden Datei eingerichtet werden:

bc. /etc/nginx/conf.d/bloonix-webgui.conf

p. Die Konfiguration:

bc.. server {
    listen 443;
    server_name bloonix-webgui;

    access_log /var/log/nginx/bloonix-webgui.access.log;
    error_log /var/log/nginx/bloonxi-webgui.error.log;

    location ~ /public {
        root /srv/bloonix/webgui;
    }

    location /favicon.ico {
        root /srv/bloonix/webgui/public/img;
    }

    location / {
        expires off;
        include /etc/nginx/fastcgi_params;
        root /srv/bloonix/webgui/public;
        fastcgi_pass 127.0.0.1:9000;
    }

    ssl on;
    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;
}

p. Der Paramter __server_name__ sollte noch angepasst werden. Es muss ebenfalls ein SSL-Zertifikat generiert werden, falls noch keines vorhanden ist:

bc. mkdir /etc/nginx/ssl
cd /etc/nginx/ssl
openssl req -new -x509 -nodes -out server.crt -keyout server.key

h2. Datenbankschema und Elasticsearch-Template

p. Um das Schema für die PostgreSQL-Datenbank und das Template für Elasticsearch anzulegen, gibt es im Verzeichnis

bc. /srv/bloonix/webgui/schema

p. ein paar Skripte zur Hilfe.

p. Um das Schema für die PostgreSQL-Datenbank anzulegen, muss folgendes Kommando ausgeführt werden:

bc. /srv/bloonix/webgui/schema/init-database

p. Das Skript erstellt das Datenbank-Schema sowie einen Zugang für den Benutzer __bloonix__. Das Passwort für die Datenbank wird dabei automatisch generiert und in die Konfigurationsdatei __/etc/bloonix/database/main.conf__ geschrieben. Diese Datei wird von allen Komponenten, die einen Zugang zu Datenbank benötigen, inkludiert.

p. Um das Template für Elasticsearch anzulegen, muss folgendes Kommando ausgeführt werden:

bc. /srv/bloonix/webgui/schema/init-elasticsearch localhost:9200

h2. WebGUI starten

p. Wenn alle Schritte durchgeführt wurden, kann die WebGUI gestartet werden:

bc. /etc/init.d/bloonix-webgui restart
# oder
systemctl restart bloonix-webgui.service

p. Öffnen Sie als nächstes einen Webbrowser und geben den Hostnamen ein, der in der Nginx Konfiguration angegeben wurde.

p. *Wichtig:* Der initiale Zugang zur WebGUI lautet:

bc. Benutzername: admin
Passwort: admin

p. Falls Sie mal das Passwort vergessen haben, so können Sie das Skript __/srv/bloonix/webgui/bin/generate-password__ verwenden, um ein neues Passwort zu generieren. Das Skript gibt zwei Update-Statements aus, die auf der Datenbank von Bloonix ausgeführt werden müssen.

p. _*Bitte beachten Sie*_, dass der Benutzer __admin__ nur verwendet werden sollte, um im Bereich __ADMINISTRATION__ zu agieren. Bitte erstellen Sie als aller erstes eine eigene Company, eine eigene Gruppe und einen eigenen Benutzer. Der Benutzer und die Gruppe müssen der neuen Company zugeordnet werden und der Benutzer sollte Operator-Rechte haben. Für weitere Informationen lesen Sie bitte hier weiter: "Companies und wie diese funktionieren":/de/docs/webgui/how-does-comanies-work.html

h2. Nginx restarten

p. Nach der Konfiguration der WebGUI können wir nun den Nginx restarten:

bc. /etc/init.d/nginx restart
# oder
systemctl restart nginx.service

