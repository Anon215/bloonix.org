h1. Schneller Installationsguide auf Debian 8 mit MariaDB

h3. Installieren Sie das Bloonix Repository

bc. apt-get update
apt-get -y install apt-transport-https ca-certificates

bc. wget -q -O- https://download.bloonix.de/repos/debian/bloonix.gpg | apt-key add -
echo "deb https://download.bloonix.de/repos/debian/ jessie main" \
    >>/etc/apt/sources.list.d/bloonix.list

h3. Installieren Sie das Elasticsearch Repository

bc. wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | apt-key add -
echo "deb http://packages.elastic.co/elasticsearch/2.x/debian stable main" \
    >>/etc/apt/sources.list.d/elasticsearch-2.x.list

h3. Paketinstallation

bc. apt-get update
apt-get -y install \
    nginx \
    mariadb-server \
    elasticsearch \
    openjdk-7-jre \
    bloonix-webgui \
    bloonix-server \
    bloonix-agent \
    bloonix-plugins-basic \
    bloonix-plugins-linux

h3. MariaDB intialisieren

bc. systemctl start mysql
mysql_secure_installation

p. Es wird empfohlen den Parameter __innodb_file_per_table__ unter __[mysqld]__ in der Konfiguration von MySQL zu setzen.

h3. Nginx

p. Erstellen Sie die Datei __/etc/nginx/conf.d/001_bloonix.conf__ mit folgendem Inhalt:

bc. include /etc/bloonix/webgui/nginx.conf;

p. oder führen Sie folgendes Kommando durch:

bc. echo "include /etc/bloonix/webgui/nginx.conf;" >/etc/nginx/conf.d/001_bloonix.conf

h3. Elasticsearch und Nginx starten

p. Aus Sicherheitsgründen sollte der Parameter __network.bind_host__ in __/etc/elasticsearch/elasticsearch.yml__ angepasst werden, damit Elasticsearch nicht auf allen IP-Adressen lauscht. Beispiel:

bc. network.bind_host: 127.0.0.1

bc. systemctl start elasticsearch
systemctl restart nginx

h3. Initialisieren Sie das Bloonix Template für Elasticsearch

bc. /srv/bloonix/webgui/schema/init-elasticsearch localhost:9200

h3. Initialisieren Sie das Bloonix Schema für MariaDB

bc. /srv/bloonix/webgui/schema/init-database --mysql

h3. Plugin Metadaten

p. Nachdem die Datenbank erfolgreich initiiert wurde und läuft, kann das Paket __bloonix__plugin_config__ installiert werden, das die Metadaten der Plugins in die Datenbank importiert:

bc. apt-get -y install bloonix-plugin-config

h3. Konfigurieren Sie den Agenten

p. Editieren Sie die Konfiguration des Bloonix Agenten und konfigurieren Sie die Sektion __server__:

bc. vim /etc/bloonix/agent/main.conf

p. Setzen Sie folgende Paramter in der Sektion __server__:

==
<pre><code># Bloonix-Server hostname (demo.bloonix.org ist nur ein Beispiel)
host demo.bloonix.org

# Wenn Sie ein selbst signiertes Zertifikat einsetzen, dann muss die Validierung
# des Zertifikats deaktiviert werden
ssl_verify_mode none
</code></pre>
==

h3. Alle Bloonix Dienste starten

bc. systemctl start bloonix-webgui
systemctl start bloonix-server
systemctl start bloonix-srvchk
systemctl start bloonix-agent

h3. Alle Dienste automatisch nach einem Serverstart starten

bc. systemctl enable bloonix-webgui
systemctl enable bloonix-server
systemctl enable bloonix-srvchk
systemctl enable bloonix-agent
systemctl enable mysql
systemctl enable nginx

h3. Ready to rumble

p. Fertig! :-) Jetzt können Sie sich in der WebGUI einloggen. Der initiale Benutzername und das Passwort lautet __admin/admin__
